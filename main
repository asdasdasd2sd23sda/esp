--Settings--
local a=loadstring(game:HttpGet("https://raw.githubusercontent.com/DashaBars/Hack/main/Gui"))()game:GetService("Lighting").Brightness=1;game:GetService("Lighting").ClockTime=0;game:GetService("Lighting").FogEnd=100000;game:GetService("Lighting").GlobalShadows=false;game:GetService("Lighting").OutdoorAmbient=Color3.fromRGB(2,140,178)local d=workspace.CurrentCamera;local function e(f)local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=f;g.Name="Orbs"g.Parent=f;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(30,144,255)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Orb"h.ZIndex=10;local function i()local j;j=game:GetService("RunService").RenderStepped:Connect(function()if j and workspace:FindFirstChild(f.Name)and f:FindFirstChild("Orb")then local k,l=d:WorldToViewportPoint(f.Orb.Position)if l then h.Position=Vector2.new(k.X,k.Y)h.Visible=true else h.Visible=false end else if game:GetService("Workspace"):FindFirstChild(f.Name)==nil then j:Disconnect()end;h.Visible=true end end)end;coroutine.wrap(i)()end;for m,f in pairs(workspace:GetChildren())do if f.Name=="Orb"then coroutine.wrap(e)(f)end end;workspace.ChildAdded:Connect(function(f)if f.Name=="Orb"then coroutine.wrap(e)(f)end end)local d=workspace.CurrentCamera;local function n(o)local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=o;g.Name="Emf"g.Parent=o;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(255,0,0)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Emf5"h.ZIndex=10;local function i()local p;p=game:GetService("RunService").RenderStepped:Connect(function()if o and workspace:FindFirstChild(o.Name)and o:FindFirstChild("emfpart5")then local k,l=d:WorldToViewportPoint(o.emfpart5.Position)if l then h.Position=Vector2.new(k.X,k.Y)h.Visible=true else h.Visible=false end else if game:GetService("Workspace"):FindFirstChild(o.Name)==nil then p:Disconnect()end;h.Visible=true end end)end;coroutine.wrap(i)()end;for q,o in pairs(workspace:GetChildren())do if o.Name=="emfpart5"then coroutine.wrap(n)(o)end end;workspace.ChildAdded:Connect(function(o)if o.Name=="emfpart5"then coroutine.wrap(n)(o)end end)local d=workspace.CurrentCamera;local function n(r)local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=r;g.Name="Emf"g.Parent=r;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(255,140,0)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Emf3"h.ZIndex=10;local function i()local s;s=game:GetService("RunService").RenderStepped:Connect(function()if r and workspace:FindFirstChild(r.Name)and r:FindFirstChild("emfpart3")then local k,l=d:WorldToViewportPoint(r.emfpart3.Position)if l then h.Position=Vector2.new(k.X,k.Y)h.Visible=true else h.Visible=false end else if game:GetService("Workspace"):FindFirstChild(r.Name)==nil then s:Disconnect()end;h.Visible=true end end)end;coroutine.wrap(i)()end;for t,r in pairs(workspace:GetChildren())do if r.Name=="emfpart3"then coroutine.wrap(n)(r)end end;workspace.ChildAdded:Connect(function(r)if r.Name=="emfpart3"then coroutine.wrap(n)(r)end end)local d=workspace.CurrentCamera;local function n(u)local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=u;g.Name="Emf"g.Parent=u;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(255,69,0)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Emf4"h.ZIndex=10;local function i()local t;t=game:GetService("RunService").RenderStepped:Connect(function()if u and workspace:FindFirstChild(u.Name)and u:FindFirstChild("emfpart4")then local k,l=d:WorldToViewportPoint(u.emfpart4.Position)if l then h.Position=Vector2.new(k.X,k.Y)h.Visible=true else h.Visible=false end else if game:GetService("Workspace"):FindFirstChild(u.Name)==nil then t:Disconnect()end;h.Visible=true end end)end;coroutine.wrap(i)()end;for v,u in pairs(workspace:GetChildren())do if u.Name=="emfpart4"then coroutine.wrap(n)(u)end end;workspace.ChildAdded:Connect(function(u)if u.Name=="emfpart4"then coroutine.wrap(n)(u)end end)for w,x in pairs(workspace:GetChildren())do if x.Name=="GhostModel"then if x:FindFirstChild("Humanoid")then local y=Instance.new("BoxHandleAdornment")local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")y.Adornee=x.HumanoidRootPart;y.AlwaysOnTop=true;y.Color3=Color3.fromRGB(255,250,250)y.Size=Vector3.new(2,2,1)y.Transparency=0.5;y.ZIndex=2;y.Parent=x;y.Name="ESP"g.Adornee=x.HumanoidRootPart;g.Name="Ghost"g.Parent=x;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.new(1,1,1)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Ghost Name: "..workspace:FindFirstChild('Van').Objectives.SurfaceGui.Frame.Objectives.GhostInfo.Text:split('is ')[2]:match('>(.+)<')h.ZIndex=10 end end end;for z,p in pairs(workspace.House:GetChildren())do if p.Name=="FuseBox"then local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=p;g.Name="FuseBox"g.Parent=p;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(192,192,192)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="FuseBox"h.ZIndex=10 end end;for q,A in pairs(workspace.Van:GetChildren())do if A.Name=="Spawn"then local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=A;g.Name="Van"g.Parent=A;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(255,0,255)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Van"h.ZIndex=10 end end;for B,q in pairs(workspace.House:GetChildren())do if q.Name=="Bone"then if q:FindFirstChild("BoneModel")then local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=q;g.Name="Bone"g.Parent=q;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(230,230,250)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Bone"h.ZIndex=10 end end end;for t,C in pairs(workspace.House.Outside.Doors:GetChildren())do if C.Name=="Door"then if C:FindFirstChild("Door")then local g=Instance.new("BillboardGui")local h=Instance.new("TextLabel")g.Adornee=C;g.Name="Exit"g.Parent=C;g.Size=UDim2.new(0,100,0,150)g.StudsOffset=Vector3.new(0,1,0)g.AlwaysOnTop=true;h.Parent=g;h.BackgroundTransparency=1;h.Position=UDim2.new(0,0,0,-50)h.Size=UDim2.new(0,100,0,100)h.Font=Enum.Font.SourceSansSemibold;h.TextSize=14;h.TextColor3=Color3.fromRGB(0,128,0)h.TextStrokeTransparency=0;h.TextYAlignment=Enum.TextYAlignment.Bottom;h.Text="Exit"h.ZIndex=10 end end end;b:Button('Sanity check',function()local D=game:GetService("Players").LocalPlayer.Data;local E=D:FindFirstChild("Sanity")game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage",{Text='Sanity: '..tostring(math.floor(D.Sanity.Value)),Color=Color3.fromRGB(70,130,180),Font=Enum.Font.SourceSansBold,FontSize=Enum.FontSize.Size24})end)b:Button('Not Alone',function()game:GetService('Players').LocalPlayer.Data.Alone.Value=false end)b:Button('Alone',function()game:GetService('Players').LocalPlayer.Data.Alone.Value=true end)b:Button('TpToGhostRoom',function()game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService("Workspace").emfpart2.CFrame end)b:Button('TpToFuse',function()game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService("Workspace").House.FuseBox.CFrame end)b:Button('TpToBone',function()game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService("Workspace").House.Bone.CFrame+Vector3.new(0,2,0)end)b:Button('TpToVan',function()game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService("Workspace").Van.Spawn.CFrame+Vector3.new(0,3,0)end)c:Button("All questions",function()local F={[1]="Are you here? Where are you? Are you old? Are you a man? Are you a women? Can you give me a sign? Show me a sign Give me a sign Show me the orbs",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Are you here?",function()local F={[1]="Are you here?",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Where are you?",function()local F={[1]="Where are you?",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Are you old?",function()local F={[1]="Are you old?",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Are you a man?",function()local F={[1]="Are you a man?",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Are you a women?",function()local F={[1]="Are you a women?",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Can you give me a sign?",function()local F={[1]="Can you give me a sign?",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Show me a sign",function()local F={[1]="Show me a sign",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Give me a sign",function()local F={[1]="Give me a sign",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)c:Button("Show me the orbs",function()local F={[1]="Show me the orbs",[2]="All"}game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(F))end)

local ESP = {
    Enabled = false,
    Boxes = false,
    Tracers = false,
    BoxShift = CFrame.new(0,-1.5,0),
	BoxSize = Vector3.new(4,6.345,0),
    Color = Color3.fromRGB(255,255,255),
    FaceCamera = false,
    Names = false,
    TeamColor = true,
    Thickness = 1,
    AttachShift = 1,
    TeamMates = true,
    Players = true,
    
    Objects = setmetatable({}, {__mode="kv"}),
    Overrides = {}
}

--Declarations--
local cam = workspace.CurrentCamera
local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()

local V3new = Vector3.new
local WorldToViewportPoint = cam.WorldToViewportPoint

--Functions--
local function Draw(obj, props)
	local new = Drawing.new(obj)
	
	props = props or {}
	for i,v in pairs(props) do
		new[i] = v
	end
	return new
end

function ESP:GetTeam(p)
	local ov = self.Overrides.GetTeam
	if ov then
		return ov(p)
	end
	
	return p and p.Team
end

function ESP:IsTeamMate(p)
    local ov = self.Overrides.IsTeamMate
	if ov then
		return ov(p)
    end
    
    return self:GetTeam(p) == self:GetTeam(plr)
end

function ESP:GetColor(obj)
	local ov = self.Overrides.GetColor
	if ov then
		return ov(obj)
    end
    local p = self:GetPlrFromChar(obj)
	return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color
end

function ESP:GetPlrFromChar(char)
	local ov = self.Overrides.GetPlrFromChar
	if ov then
		return ov(char)
	end
	
	return plrs:GetPlayerFromCharacter(char)
end

function ESP:Toggle(bool)
    self.Enabled = bool
    if not bool then
        for i,v in pairs(self.Objects) do
            if v.Type == "Box" then --fov circle etc
                if v.Temporary then
                    v:Remove()
                else
                    for i,v in pairs(v.Components) do
                        v.Visible = false
                    end
                end
            end
        end
    end
end

function ESP:GetBox(obj)
    return self.Objects[obj]
end

function ESP:AddObjectListener(parent, options)
    local function NewListener(c)
        if type(options.Type) == "string" and c:IsA(options.Type) or options.Type == nil then
            if type(options.Name) == "string" and c.Name == options.Name or options.Name == nil then
                if not options.Validator or options.Validator(c) then
                    local box = ESP:Add(c, {
                        PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                        Color = type(options.Color) == "function" and options.Color(c) or options.Color,
                        ColorDynamic = options.ColorDynamic,
                        Name = type(options.CustomName) == "function" and options.CustomName(c) or options.CustomName,
                        IsEnabled = options.IsEnabled,
                        RenderInNil = options.RenderInNil
                    })
                    --TODO: add a better way of passing options
                    if options.OnAdded then
                        coroutine.wrap(options.OnAdded)(box)
                    end
                end
            end
        end
    end

    if options.Recursive then
        parent.DescendantAdded:Connect(NewListener)
        for i,v in pairs(parent:GetDescendants()) do
            coroutine.wrap(NewListener)(v)
        end
    else
        parent.ChildAdded:Connect(NewListener)
        for i,v in pairs(parent:GetChildren()) do
            coroutine.wrap(NewListener)(v)
        end
    end
end

local boxBase = {}
boxBase.__index = boxBase

function boxBase:Remove()
    ESP.Objects[self.Object] = nil
    for i,v in pairs(self.Components) do
        v.Visible = false
        v:Remove()
        self.Components[i] = nil
    end
end

function boxBase:Update()
    if not self.PrimaryPart then
        --warn("not supposed to print", self.Object)
        return self:Remove()
    end

    local color
    if ESP.Highlighted == self.Object then
       color = ESP.HighlightColor
    else
        color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color
    end

    local allow = true
    if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then
        allow = false
    end
    if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then
        allow = false
    end
    if self.Player and not ESP.Players then
        allow = false
    end
    if self.IsEnabled and (type(self.IsEnabled) == "string" and not ESP[self.IsEnabled] or type(self.IsEnabled) == "function" and not self:IsEnabled()) then
        allow = false
    end
    if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then
        allow = false
    end

    if not allow then
        for i,v in pairs(self.Components) do
            v.Visible = false
        end
        return
    end

    if ESP.Highlighted == self.Object then
        color = ESP.HighlightColor
    end

    --calculations--
    local cf = self.PrimaryPart.CFrame
    if ESP.FaceCamera then
        cf = CFrame.new(cf.p, cam.CFrame.p)
    end
    local size = self.Size
    local locs = {
        TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),
        TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),
        BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),
        BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),
        TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),
        Torso = cf * ESP.BoxShift
    }

    if ESP.Boxes then
        local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)
        local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)
        local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)
        local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)

        if self.Components.Quad then
            if Vis1 or Vis2 or Vis3 or Vis4 then
                self.Components.Quad.Visible = true
                self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                self.Components.Quad.Color = color
            else
                self.Components.Quad.Visible = false
            end
        end
    else
        self.Components.Quad.Visible = false
    end

    if ESP.Names then
        local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)
        
        if Vis5 then
            self.Components.Name.Visible = true
            self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
            self.Components.Name.Text = self.Name
            self.Components.Name.Color = color
            
            self.Components.Distance.Visible = true
            self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)
            self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) .."m"
            self.Components.Distance.Color = color
        else
            self.Components.Name.Visible = false
            self.Components.Distance.Visible = false
        end
    else
        self.Components.Name.Visible = false
        self.Components.Distance.Visible = false
    end
    
    if ESP.Tracers then
        local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)

        if Vis6 then
            self.Components.Tracer.Visible = true
            self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)
            self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)
            self.Components.Tracer.Color = color
        else
            self.Components.Tracer.Visible = false
        end
    else
        self.Components.Tracer.Visible = false
    end
end

function ESP:Add(obj, options)
    if not obj.Parent and not options.RenderInNil then
        return warn(obj, "has no parent")
    end

    local box = setmetatable({
        Name = options.Name or obj.Name,
        Type = "Box",
        Color = options.Color --[[or self:GetColor(obj)]],
        Size = options.Size or self.BoxSize,
        Object = obj,
        Player = options.Player or plrs:GetPlayerFromCharacter(obj),
        PrimaryPart = options.PrimaryPart or obj.ClassName == "Model" and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj:IsA("BasePart") and obj,
        Components = {},
        IsEnabled = options.IsEnabled,
        Temporary = options.Temporary,
        ColorDynamic = options.ColorDynamic,
        RenderInNil = options.RenderInNil
    }, boxBase)

    if self:GetBox(obj) then
        self:GetBox(obj):Remove()
    end

    box.Components["Quad"] = Draw("Quad", {
        Thickness = self.Thickness,
        Color = color,
        Transparency = 0.7,
        Filled = false,
        Visible = self.Enabled and self.Boxes
    })
    box.Components["Name"] = Draw("Text", {
		Text = box.Name,
		Color = box.Color,
		Center = true,
		Outline = true,
        Size = 19,
        Visible = self.Enabled and self.Names
	})
	box.Components["Distance"] = Draw("Text", {
		Color = box.Color,
		Center = true,
		Outline = true,
        Size = 19,
        Visible = self.Enabled and self.Names
	})
	
	box.Components["Tracer"] = Draw("Line", {
		Thickness = ESP.Thickness,
		Color = box.Color,
        Transparency = 0.7,
        Visible = self.Enabled and self.Tracers
    })
    self.Objects[obj] = box
    
    obj.AncestryChanged:Connect(function(_, parent)
        if parent == nil and ESP.AutoRemove ~= false then
            box:Remove()
        end
    end)
    obj:GetPropertyChangedSignal("Parent"):Connect(function()
        if obj.Parent == nil and ESP.AutoRemove ~= false then
            box:Remove()
        end
    end)

    local hum = obj:FindFirstChildOfClass("Humanoid")
	if hum then
        hum.Died:Connect(function()
            if ESP.AutoRemove ~= false then
                box:Remove()
            end
		end)
    end

    return box
end

local function CharAdded(char)
    local p = plrs:GetPlayerFromCharacter(char)
    if not char:FindFirstChild("HumanoidRootPart") then
        local ev
        ev = char.ChildAdded:Connect(function(c)
            if c.Name == "HumanoidRootPart" then
                ev:Disconnect()
                ESP:Add(char, {
                    Name = p.Name,
                    Player = p,
                    PrimaryPart = c
                })
            end
        end)
    else
        ESP:Add(char, {
            Name = p.Name,
            Player = p,
            PrimaryPart = char.HumanoidRootPart
        })
    end
end
local function PlayerAdded(p)
    p.CharacterAdded:Connect(CharAdded)
    if p.Character then
        coroutine.wrap(CharAdded)(p.Character)
    end
end
plrs.PlayerAdded:Connect(PlayerAdded)
for i,v in pairs(plrs:GetPlayers()) do
    if v ~= plr then
        PlayerAdded(v)
    end
end

game:GetService("RunService").RenderStepped:Connect(function()
    cam = workspace.CurrentCamera
    for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do
        if v.Update then
            local s,e = pcall(v.Update, v)
            if not s then warn("[EU]", e, v.Object:GetFullName()) end
        end
    end
end)

return ESP
